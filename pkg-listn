#!/bin/bash

: "${XDG_CACHE_HOME:=$HOME/.cache}"
: "${XDG_CONFIG_HOME:=$HOME/.config}"
: "${XDG_RUNTIME_DIR:=/tmp}"

declare -gr _name=pkg-listn
declare -gr dir_cache="$XDG_CACHE_HOME/$_name"
declare -gr dir_config="$XDG_CONFIG_HOME/$_name"
declare -gr dir_tmp="$XDG_RUNTIME_DIR/$_name"

declare -g \
  _cmd_install _cmd_install_foreign \
  _cmd_remove  _cmd_remove_foreign

declare -ag \
  _commands_to_execute _cmd_terminal \
  _cmd_list_local _cmd_list_remote _cmd_list_foreign \

packages.d_is_not_empty() {
  [[ -d $dir_config/packages.d && $(ls -A "$dir_config/packages.d") ]]
}

main(){

  [[ -f $dir_tmp/lock ]] \
    && ERX "pkg-parsing in progress, lockfile exists"

  trap 'CLEANUP' EXIT INT HUP
  mkdir -p "$dir_tmp" "$dir_cache"
  touch "$dir_tmp/lock" "$dir_cache/packages-cache"

  install_config

  [[ ${_o[version]} ]] && __print_version && exit

  [[ -f $dir_config/packages || $(packages.d_is_not_empty) ]] \
    || ERX "package file ('$dir_config/packages') not found."

  parse_config
  parse_packages
  create_lists
  set_commands_to_execute
  [[ ${_commands_to_execute[*]} ]] && execute_commands

  update_cache_file
}

__dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")") #bashbud
source "$__dir/_init.sh"                              #bashbud
